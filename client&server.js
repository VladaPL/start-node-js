// * Осуществление взаимодействия между браузером и сервером

// * Requests -> отправляем запрос
// Get - запрос данных
// Post - отправка данных
// Put - заменяет хранящиеся на сервере данные новыми
// Delete - удаление данных
// * Response <- получаем ответ от сервера

// Такая коммуникация между браузером и сервером называется HTTP/HTTPS
// В основе всех интернет коммуникаций лежит протокол.
// Протокол - это набор коммуникационных правил, которые принимают стороны, чтобы взаимодействовать.

// Чтобы получить взаимодействие нужно установить канал связи.
// * Этот канал называется Socket.
// Отправка данных компьютеров, связанных Socket-ом происходит по протоколу ->
// TCP (Transmission Control Protocol) с помощью пакетов.
// Пакет - это определенным образом оформленный блок данных, передаваемых по сети в пакетном режиме (похоже на буфер).

// * Вся эта функциональность заложена в компьютере, а node.js дает доступ к ее использованию.
// Когда мы используем ноду, на сервере мы можем создать
// логику обработки полученных запросов и отправляемых данных.

// Когда мы ведем разработку, один компьютер мы можем использовать и как интерфейс взаимодествия,
// то есть браузер, и как сервер.
// Но на компьтере так же установлены программы, которые работают в сети.
// И каждая из этих программ использует определенный порт для коммуникации.
// Мы используем локальный адрес и порт, чтобы комп знал, что этот запрос должен быть обработан именно нодой.
// * При создании сервера определятся порт - localhost:3000 или 127.0.0.1:3000.
// Этот порт и будет слушать нода и в случае запроса он будет обработан нашим сервером, а не сторонней программой.
// 127.0.0.1 - это специальный IP (loopback), который возвращает отправляемые запросы на наш локальный компьютер.
// Таким образом мы можем работать и с серверной и с пользовательской частями приложения на одной машине.